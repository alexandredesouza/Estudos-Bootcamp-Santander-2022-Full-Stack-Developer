Comandos de navegação:DIR: para poder listar, se situar dentro do sistema operacional, entender onde esta.
                      CD/: permite que navegue entre pastas , é igual para todos sistema operacionais.
                      CD winddows: traz todas as pastas que estão no windows.
                      CD..: retorna um nível na navegação.
                      CTRL: limpar a tela.
                      MKDIR: Criar pasta.
                      DEL: deletar arquivos nas pastas.
                      RMDIR: remover pastas(repositórios), com todas as patas que estão lá dentro. S/ Q/ para deletar.
                      SETA PARA CIMA: retornar para o trabalho que acabou de executar

Objetos Fundamentais: Baixar GIT(https://git-scm.com/download/win)

           BLOBS
           TREES
          COMMITS

         BLOBS: contém metadados do GIT, que são tipo do obejtos, o tamanho da Strin, o tamanho do arquivo entre outros.
         Bloco básico de composição.

         TREES: responsável por montar toda estrutura que está os arquivos, aponta para as BLOBS.

         COMMIT:É o que vai juntar tudo, que vai dar sentido para o que você está fazendo,aponta para o TREES, para o PARENTE,
         para um autor e mensagem

         CHAVESSH e TOKENS

         CHAVESSH:É uma forma de estabelecer uma conexão segura entre duas maquinas.

         Criando chave:

PRIMEIRO PASSO: GIT BASH $ ssh-keygen -t ed25519 -C alexandreluizdesouza220@gmail.com

SEGUNDO PASSO: GIT BASH procurar pasta.
               $ cd /c/Users/alexa/.ssh/
               $ ls
               $ cat id_25519.pub - gerar chave para pasta PUB
               Ir ao Github barra de perfil opção SETTINGS, depois em ACCESS opção SSH and GPG keys, 
                depois NEW SSH key colocar nome da chave colar link gerado no GIT BASH.

TERCEIRO PASSO: Iniciar o SSH eigen, entidade que vai ficar encarregada de pegar as chaves e lidar com elas.
                $ eval $(ssh-agent -s)
                Agent pid
                $ ls
                $ ssh-add id_ed25519 enter colocar senha

CLONANDO REPOSITORIO SSH: GIT BASH $ git clone colar o SSH , após mendagem dar YES, LS para ver se clonou.

TOKEN: É usado no lugar da senha da sua conta ao executar operações pela linha de comando .

      Ir em DEVELOPER SETTINGS
      Depois PERSONAL ACESS TOKENS
      GENERATE NEW TOKEN - dar nome marcar repo.
      Copiar o token e guarda em um lugar seguro.
                
CLONANDO REPOSITÓRIO TOKENS: copiar HTTPS GITHUB, no GIT BASH ir em uma pasta reservada onde você quer clonar.
                             $ git clone colar HTTPS enter, ele vai pedir para colocar o token do GITHUB

INICIANDO O GIT E CRIANDO UM COMMIT: Vamos criar uma pasta no diretório C:/ com o nome de Workspace
                                     Ir na pasta Workspace no diretório C:/ abrir o GIT BASH.
                                     $ls para mostrar as pastas
                                     $ entrar na pasta (CD)
                                     $ ctrl L para limpar tudo
                                     $ mkdir livro-receitas, para criar outra pasta dentro de Worspace
                                     $ cd livro-receitas, para iniciar a pasta 
                                     $ git init - para iniciar o git dentro da pasta e versonilizar o código.
                                     $ ls -a, para ver pasta oculta do git criada dentro da pasta criada.
                                     $ git config --global user.email "email", para criar o primeiro COMMIT.
                                     $ git config --global user.name 

COMMITAR: $ git add *
          $ git commit -m "mensagem de texo(hora, autor etc..) "

CICLO DE VIDA DOS ARQUIVOS COM GIT:$ git status, ele vai dizer como está o estado do arquivo(modifield, stage).

Vamos criar outra pasta : $ mkdir receitas
                          $ entrar na pasta (CD)
                          $ ctrl L para limpar tudo
                          Vamos criar uma receita de Strogonoff em MARKDOWN                         
                          $ mv Strogonoff.md ./receitas/, para mover arquivo Strogonoff para dentro da pasta receitas
                          $ git add Strogonoff.md receitas/, para tirar Untracked, e preparar para commitar.
                          $ git commit -m "cria pasta receitas"
                          $ git status, visualizar se deu certo


Add README.md para lista de receitas: CTRL L, para limpar
                                  $ ls, para mostrar pasta receitas.
                                  $ echo > README.md
                                  $ git status, o arquivo vai estar em Untracked, ainda não está sendo versionado.
                                  $ git status novamente
                                  $ git add *, ele pega tudo que está no diretorio de trabalho e add no Stage para poder commitar.
                                  CTRL L novamente
                                  $ ls
                                  $ git status, vai estar Staged pronto para commitar
                                  $ git commit -m "README.md"
                                  




